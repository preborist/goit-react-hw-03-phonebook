{"version":3,"sources":["components/InputPhonebookForm/InputPhonebookForm.js","components/ContactsList/Contact/Contact.js","components/ContactsList/Filter/Filter.js","components/ContactsList/ContactsList.js","components/Container/Container.js","App.js","index.js"],"names":["InputPhonebookForm","handleInputChange","handleSubmit","inputName","inputNumber","className","onSubmit","onChange","name","type","value","Contact","id","number","onHandleDelete","onClick","Filter","inputFilterName","changeFilter","ContactsList","contacts","map","Container","children","App","state","filter","addNewContact","newContact","shortid","setState","e","preventDefault","newInputName","currentTarget","newInputNumber","some","contact","toLowerCase","alert","handleDelete","contactId","prevState","console","log","localStorage","getItem","parsedContacts","JSON","parse","this","prevProps","setItem","stringify","normalizedFilter","filteredContacts","includes","length","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.628aa210.chunk.js","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './InputPhonebookForm.scss';\r\n\r\nconst InputPhonebookForm = ({\r\n  handleInputChange,\r\n  handleSubmit,\r\n  inputName,\r\n  inputNumber,\r\n}) => {\r\n  return (\r\n    <>\r\n      <form className=\"InputPhonebookForm\" onSubmit={handleSubmit}>\r\n        <label>\r\n          <span className=\"label\">Name</span>\r\n          <input\r\n            onChange={handleInputChange}\r\n            name=\"name\"\r\n            type=\"text\"\r\n            value={inputName}\r\n          />\r\n        </label>\r\n        <label>\r\n          <span className=\"label\">Number</span>\r\n          <input\r\n            onChange={handleInputChange}\r\n            name=\"number\"\r\n            type=\"number\"\r\n            value={inputNumber}\r\n          />\r\n        </label>\r\n\r\n        <button type=\"submit\">Add contact</button>\r\n      </form>\r\n    </>\r\n  );\r\n};\r\n\r\nInputPhonebookForm.propTypes = {\r\n  handleInputChange: PropTypes.func.isRequired,\r\n  handleSubmit: PropTypes.func.isRequired,\r\n  inputName: PropTypes.string.isRequired,\r\n  inputNumber: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default InputPhonebookForm;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './Contact.scss';\r\n\r\nconst Contact = ({ id, name, number, onHandleDelete }) => (\r\n  <div className=\"Contact\" key={id}>\r\n    <span className=\"name\">{name}:</span>\r\n    <span className=\"number\">{number}</span>\r\n    <button type=\"button\" onClick={() => onHandleDelete(id)}>\r\n      Delete\r\n    </button>\r\n  </div>\r\n);\r\n\r\nContact.propTypes = {\r\n  id: PropTypes.string.isRequired,\r\n  name: PropTypes.string.isRequired,\r\n  number: PropTypes.string.isRequired,\r\n  onHandleDelete: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Contact;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Filter = ({ inputFilterName, changeFilter }) => {\r\n  return (\r\n    <label>\r\n      Find contacs by name{' '}\r\n      <input\r\n        name=\"filter\"\r\n        type=\"text\"\r\n        value={inputFilterName}\r\n        onChange={changeFilter}\r\n      />\r\n    </label>\r\n  );\r\n};\r\n\r\nFilter.propTypes = {\r\n  inputFilterName: PropTypes.string.isRequired,\r\n  changeFilter: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Filter;\r\n","import React from 'react';\r\nimport Contact from './Contact';\r\nimport Filter from './Filter';\r\nimport PropTypes from 'prop-types';\r\nimport './ContactList.scss';\r\n\r\nconst ContactsList = ({\r\n  contacts,\r\n  inputFilterName,\r\n  changeFilter,\r\n  onHandleDelete,\r\n}) => {\r\n  return (\r\n    <>\r\n      <Filter inputFilterName={inputFilterName} changeFilter={changeFilter} />\r\n      <ul className=\"ContactList\">\r\n        {contacts.map(({ id, name, number }) => (\r\n          <li className=\"ContactList__item\" key={id}>\r\n            <Contact\r\n              id={id}\r\n              name={name}\r\n              number={number}\r\n              onHandleDelete={onHandleDelete}\r\n            ></Contact>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </>\r\n  );\r\n};\r\n\r\nContactsList.propTypes = {\r\n  contacts: PropTypes.array.isRequired,\r\n  inputFilterName: PropTypes.string,\r\n  changeFilter: PropTypes.func,\r\n  onHandleDelete: PropTypes.func,\r\n};\r\n\r\nexport default ContactsList;\r\n","import React from 'react';\r\nimport './Container.scss';\r\n\r\nconst Container = ({ children }) => <div className=\"Container\">{children}</div>;\r\n\r\nexport default Container;\r\n","import React, { Component } from 'react';\nimport InputPhonebookForm from './components/InputPhonebookForm';\nimport ContactsList from './components/ContactsList';\nimport Container from './components/Container';\nimport shortid from 'shortid';\n\nclass App extends Component {\n  state = {\n    contacts: [],\n    filter: '',\n    name: '',\n    number: '',\n  };\n\n  addNewContact = (name, number) => {\n    const newContact = {\n      id: shortid(),\n      name,\n      number,\n    };\n    this.setState({\n      contacts: [...this.state.contacts, newContact],\n      name: '',\n      number: '',\n    });\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n    const newInputName = e.currentTarget.name.value;\n    const newInputNumber = e.currentTarget.number.value;\n    if (newInputName && newInputNumber) {\n      this.state.contacts.some(\n        contact => contact.name.toLowerCase() === newInputName.toLowerCase(),\n      )\n        ? alert(`${newInputName} is already in contacts`)\n        : this.addNewContact(newInputName, newInputNumber);\n    } else {\n      alert('Please enter a contact name or phone number!');\n    }\n  };\n\n  handleInputChange = e => {\n    const { name, value } = e.currentTarget;\n    this.setState({ [name]: value });\n  };\n\n  changeFilter = e => {\n    this.setState({ filter: e.currentTarget.value });\n  };\n\n  handleDelete = contactId => {\n    this.setState(prevState => ({\n      contacts: prevState.contacts.filter(contact => contact.id !== contactId),\n    }));\n  };\n\n  componentDidMount() {\n    console.log('componentDidMount');\n    const contacts = localStorage.getItem('contacts');\n    const parsedContacts = JSON.parse(contacts);\n    if (parsedContacts) {\n      this.setState({ contacts: parsedContacts });\n    }\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    console.log('componentDidUpdate');\n    if (this.state.contacts !== prevState.contacts) {\n      console.log('обновлилось');\n      localStorage.setItem('contacts', JSON.stringify(this.state.contacts));\n    }\n  }\n  render() {\n    const { contacts, name, number, filter } = this.state;\n\n    const normalizedFilter = filter.toLowerCase();\n    const filteredContacts = contacts.filter(contact =>\n      contact.name.toLowerCase().includes(normalizedFilter),\n    );\n\n    return (\n      <Container>\n        <h1>Phonebook</h1>\n        <InputPhonebookForm\n          handleSubmit={this.handleSubmit}\n          handleInputChange={this.handleInputChange}\n          inputName={name}\n          inputNumber={number}\n        />\n        <h2>Contacts</h2>\n        {contacts.length > 0 && (\n          <ContactsList\n            contacts={filteredContacts}\n            onHandleDelete={this.handleDelete}\n            inputFilterName={filter}\n            changeFilter={this.changeFilter}\n          />\n        )}\n      </Container>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './styles.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}